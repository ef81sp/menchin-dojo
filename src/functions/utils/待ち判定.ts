import { 聴牌, 牌, 待ち種別 } from '../types';
import { is単騎, is両面, is嵌張, is辺張, is対子 } from './構成要素判定';

export const 待ち判定 = ({ 雀頭, 手牌 }: 聴牌) =>
  手牌
    .map(手牌 => ({
      ...待ち種別判定(手牌[0], 雀頭),
      雀頭,
      残り手牌: 手牌.slice(1)
    }))

const 待ち種別判定 = (待ち箇所: string, 雀頭: string): 待ち種別 => {
  if (is単騎(待ち箇所))
    return {
      種別: '単騎',
      待ち: [待ち箇所],
      待ち箇所
    };

  if (is辺張(待ち箇所)) {
    const 待ち = 待ち箇所[0] === '1' ? '3' : '7';
    return {
      種別: '辺張',
      待ち: [待ち],
      待ち箇所
    };
  }

  if (is嵌張(待ち箇所))
    return {
      種別: '嵌張',
      待ち: [前後取得(待ち箇所[0] as 牌, '+')],
      待ち箇所
    };

  if (is対子(待ち箇所))
    return {
      種別: '双ポン',
      待ち箇所,
      待ち: [待ち箇所[0], 雀頭[0]].sort()
    };

  if (is両面(待ち箇所))
    return {
      種別: '両面',
      待ち箇所,
      待ち: [前後取得(待ち箇所[0] as 牌, '-'), 前後取得(待ち箇所[1] as 牌, '+')]
    };

  throw new Error('まちないよ');
};

const 前後取得 = (牌: 牌, 前後: '+' | '-') => {
  const すうちー牌 = Number(牌);
  const 計算結果 = 前後 === '+' ? すうちー牌 + 1 : すうちー牌 - 1;
  return 計算結果.toString();
};
